syntax = "proto3";
package interactionNode;



/* Visual Input Node Service */

service InteractionNodeService {

// <------------------- Initialization -------------------------------->
  rpc InitializeInteractionNode (InitializeInteractionNodeRequest) returns (InitializeInteractionNodeResponse);

  rpc InitalizeAlgorithm (InitializeAlgorithmRequest) returns (InitializeAlgorithmResponse);

  rpc RunAlgorithm (RunAlgorithmRequest) returns (stream RunAlgorithmResponse);

  rpc StopAlgorithm (StopAlgorithmRequest) returns (StopAlgorithmResponse);
  
}



message InitializeInteractionNodeRequest {
}
message InitializeInteractionNodeResponse {
  bool is_initialized = 1;
}
message AlgorithimConfig {
  double threshold = 1;
  repeated int32 key_points = 2;
}

message InitializeAlgorithmRequest {
  string algorithm_type = 1;
  AlgorithimConfig algorithm_config = 2;
  string data_transform_type = 3;
  string id = 4;
}
message InitializeAlgorithmResponse {
  string id = 1;
  bool is_initialized = 2;
}

message RunAlgorithmRequest {
  
}
message RunAlgorithmResponse {
  message Locations {
    double x = 1;
    double y = 2;
  }
  repeated Locations points = 1;
  optional string error_message = 2;
}


message StopAlgorithmRequest {

}

message StopAlgorithmResponse {
  
}