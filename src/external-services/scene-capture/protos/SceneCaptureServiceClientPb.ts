/**
 * @fileoverview gRPC-Web generated client stub for sceneCapture
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.19.6
// source: protos/sceneCapture.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as protos_sceneCapture_pb from '../protos/sceneCapture_pb';


export class SceneCaptureServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorInitializeSceneCapture = new grpcWeb.MethodDescriptor(
    '/sceneCapture.SceneCaptureService/InitializeSceneCapture',
    grpcWeb.MethodType.UNARY,
    protos_sceneCapture_pb.InitializeSceneCaptureRequest,
    protos_sceneCapture_pb.InitializeSceneCaptureResponse,
    (request: protos_sceneCapture_pb.InitializeSceneCaptureRequest) => {
      return request.serializeBinary();
    },
    protos_sceneCapture_pb.InitializeSceneCaptureResponse.deserializeBinary
  );

  initializeSceneCapture(
    request: protos_sceneCapture_pb.InitializeSceneCaptureRequest,
    metadata: grpcWeb.Metadata | null): Promise<protos_sceneCapture_pb.InitializeSceneCaptureResponse>;

  initializeSceneCapture(
    request: protos_sceneCapture_pb.InitializeSceneCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.InitializeSceneCaptureResponse) => void): grpcWeb.ClientReadableStream<protos_sceneCapture_pb.InitializeSceneCaptureResponse>;

  initializeSceneCapture(
    request: protos_sceneCapture_pb.InitializeSceneCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.InitializeSceneCaptureResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sceneCapture.SceneCaptureService/InitializeSceneCapture',
        request,
        metadata || {},
        this.methodDescriptorInitializeSceneCapture,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sceneCapture.SceneCaptureService/InitializeSceneCapture',
    request,
    metadata || {},
    this.methodDescriptorInitializeSceneCapture);
  }

  methodDescriptorRunCapture = new grpcWeb.MethodDescriptor(
    '/sceneCapture.SceneCaptureService/RunCapture',
    grpcWeb.MethodType.UNARY,
    protos_sceneCapture_pb.RunCaptureRequest,
    protos_sceneCapture_pb.RunCaptureResponse,
    (request: protos_sceneCapture_pb.RunCaptureRequest) => {
      return request.serializeBinary();
    },
    protos_sceneCapture_pb.RunCaptureResponse.deserializeBinary
  );

  runCapture(
    request: protos_sceneCapture_pb.RunCaptureRequest,
    metadata: grpcWeb.Metadata | null): Promise<protos_sceneCapture_pb.RunCaptureResponse>;

  runCapture(
    request: protos_sceneCapture_pb.RunCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.RunCaptureResponse) => void): grpcWeb.ClientReadableStream<protos_sceneCapture_pb.RunCaptureResponse>;

  runCapture(
    request: protos_sceneCapture_pb.RunCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.RunCaptureResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sceneCapture.SceneCaptureService/RunCapture',
        request,
        metadata || {},
        this.methodDescriptorRunCapture,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sceneCapture.SceneCaptureService/RunCapture',
    request,
    metadata || {},
    this.methodDescriptorRunCapture);
  }

  methodDescriptorStopCapture = new grpcWeb.MethodDescriptor(
    '/sceneCapture.SceneCaptureService/StopCapture',
    grpcWeb.MethodType.UNARY,
    protos_sceneCapture_pb.StopCaptureRequest,
    protos_sceneCapture_pb.StopCaptureResponse,
    (request: protos_sceneCapture_pb.StopCaptureRequest) => {
      return request.serializeBinary();
    },
    protos_sceneCapture_pb.StopCaptureResponse.deserializeBinary
  );

  stopCapture(
    request: protos_sceneCapture_pb.StopCaptureRequest,
    metadata: grpcWeb.Metadata | null): Promise<protos_sceneCapture_pb.StopCaptureResponse>;

  stopCapture(
    request: protos_sceneCapture_pb.StopCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.StopCaptureResponse) => void): grpcWeb.ClientReadableStream<protos_sceneCapture_pb.StopCaptureResponse>;

  stopCapture(
    request: protos_sceneCapture_pb.StopCaptureRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_sceneCapture_pb.StopCaptureResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/sceneCapture.SceneCaptureService/StopCapture',
        request,
        metadata || {},
        this.methodDescriptorStopCapture,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/sceneCapture.SceneCaptureService/StopCapture',
    request,
    metadata || {},
    this.methodDescriptorStopCapture);
  }

}

